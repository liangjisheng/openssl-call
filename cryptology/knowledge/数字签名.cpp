数字签名
签名：使用私用密钥对消息摘要进行加密，得到签名

签名证书的用途：加入有A用户向B用户发送了信息“A love you”，B接收到之后怎么确定
就是A发送的呢（因为中间人攻击中，假如C截获了A发送的信息后，改成“C love you”，
B是无法确定这两个信息的发送者，因他她们都同样用B的公钥加密），于是产生了签名
证书技术。
签名证书是由CA(认证机构Certification Authority)用自己的私钥对用户的信息进行
加密，并发给用户，用户可以在发送信息的过程中附加上自己的签名证书，让接受者
验证信息的来源。当接受者接受到发送者的签名证书后即可用CA的公钥解密验证发送者
的身份信息


信息传输过程：
A. Alice 准备好要传送的数字信息（明文）。
B. Alice 对数字信息进行哈希（hash）运算，得到一个信息摘要。
C. Alice 用自己的私钥（SK）对信息摘要进行加密得到Alice 的数字签名，并将其
附在数字信息上。
D. Alice 随机产生一个加密密钥，并用此密码对要发送的信息进行加密，形成密文
E. Alice 用Bob 的公钥（PK）对刚才随机产生的加密密钥进行加密，将加密后的DES
密钥连同密文传送给Bob
F. Bob 收到Alice传送来的密文和加密过的DES密钥，先用自己的私钥对加密的DES
密钥进行解密，得到Alice随机产生的加密密钥
G Bob然后用随机密钥对收到的密文进行解密，得到明文的数字信息，然后将随机密钥抛弃
F. Bob 用Alice 的公钥（PK）对Alice 的数字签名进行解密，得到信息摘要。
G. Bob 用相同的hash算法对收到的明文再进行一次hash运算，得到一个新的信息摘要
H. Bob 将收到的信息摘要和新产生的信息摘要进行比较，如果一致，说明收到的信息
没有被修改过。
 
采用数字签名，能完成这些功能：
(1)确认信息是由签名者发送的； 
(2)确认信息自签名后到收到为止，未被修改过
(3)签名者无法否认信息是由自己发送的
        
但是上述过程存在问题，例如有用户C窃取A的电脑信息，把B的公钥修改成了自己
的公钥，A用此公钥加密信息发给B，C在中间截获这个数据就可以获取这些私密信息
怎么应对这种情况呢？签名证书就派上用场了
证书中心用自己的私钥，对每一个用户的公钥和一些相关信息一起加密，
生成"数字证书"（Digital Certificate）。发送者在发送信息之前如果想核对接受者
的公钥，只需用CA的公钥对B的签名证书进行解密确认即可