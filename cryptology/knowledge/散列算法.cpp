单项加密，散列算法

散列是信息的提炼，通常其长度要比信息小得多，且为一个固定长度。加密性强的散列
一定是不可逆的，这就意味着通过散列结果，无法推出任何部分的原始信息。任何输入
信息的变化，哪怕仅一位，都将导致散列结果的明显变化，这称之为雪崩效应。散列还
应该防冲突，即找不出具有相同散列结果的两条信息。具有这些特征的散列结果就可以
用于验证信息是否被修改。

单向散列函数一般用于产生消息摘要，密钥加密等，常见的有
MD5（Message Digest Algorithm 5）：是RSA数据安全公司开发的一种单向散列算法
SHA（Secure Hash Algorithm）：可以对任意长度的数据运算生成一个160位的数值

SHA-1是一种数据加密算法，该算法的思想是接收一段明文，然后以一种不可逆的方式
将它转换成一段(通常更小)密文，也可以简单的理解为取一串输入码
(称为预映射或信息)，并把它们转化为长度较短、位数固定的输出序列即散列值
(也称为信息摘要或信息认证代码)的过程.

通过散列算法可实现数字签名实现，数字签名的原理是将要传送的明文通过一种函数
运算(Hash)转换成报文摘要(不同的明文对应不同的报文摘要)，报文摘要加密后与明文
一起传送给接受方，接受方将接受的明文产生新的报文摘要与发送方的发来报文
摘要解密比较，比较结果一致表示明文未被改动，如果不一致表示明文已被篡改.

MAC (信息认证代码)就是一个散列结果，其中部分输入信息是密码，只有知道这个密码
的参与者才能再次计算和验证MAC码的合法性
消息认证码MAC是在密钥的控制下将任意长度的消息映射到一个简短的定长数据分组，
并将它附加在消息后。设M是边长的消息，K是仅由收发双方共享的密钥
发送者每次将ＭＡＣ附加到消息中。接收者通过重新计算ＭＡＣ来对消息进行认证。
如果接收的ＭＡＣ与计算出的ＭＡＣ相同，则
1.消息未被更改过。因为任意更改消息而未更改ＭＡＣ的行为，都将导致接收的ＭＡＣ
与更改后计算出的ＭＡＣ不同。而且，对于密钥而言只有收发双方才知　　　　　　　　道，其它方无法更改ＭＡＣ使之与更改后的消息相对应。
2.消息来自其它共享密钥的发送者。因为密钥只有收发双方知道，其它方法无法产生
对应的ＭＡＣ。
ＭＡＣ函数类似加密函数，但其不需要可逆，而加密函数是需要可逆的，
所以ＭＡＣ函数比加密函数更不容易破解